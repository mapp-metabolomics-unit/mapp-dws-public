{"pageProps":{"note":{"id":"mrslbnp9bp5tia1ne4nnszu","title":"Msconvert","desc":"","updated":1717357183409,"created":1717315977177,"custom":{},"fname":"msconvert","type":"note","vault":{"fsPath":"vault"},"contentHash":"f323779d317903b89fceae60621ac299","links":[],"anchors":{"to-launch-msconvert-on-specific-pattern-of-files":{"type":"header","text":"To launch msconvert on specific pattern of files","value":"to-launch-msconvert-on-specific-pattern-of-files","line":13,"column":0,"depth":3}},"children":[],"parent":"nKP9hb3jEQKnhdgkHa5l0","data":{}},"body":"<h1 id=\"msconvert\">Msconvert<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#msconvert\"></a></h1>\n<p>Setting up msconvert bot on commons-server</p>\n<p><a href=\"https://hub.docker.com/r/chambm/pwiz-skyline-i-agree-to-the-vendor-licenses\">https://hub.docker.com/r/chambm/pwiz-skyline-i-agree-to-the-vendor-licenses</a></p>\n<h3 id=\"to-launch-msconvert-on-specific-pattern-of-files\">To launch msconvert on specific pattern of files<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#to-launch-msconvert-on-specific-pattern-of-files\"></a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -it --rm -e <span class=\"token assign-left variable\">WINEDEBUG</span><span class=\"token operator\">=</span>-all -v /media/share/mapp/public/QE_plus_unifr/raw:/data -v /home/allardpm/sandbox:/output chambm/pwiz-skyline-i-agree-to-the-vendor-licenses /bin/bash -c <span class=\"token string\">'for file in /data/1684941280_PMA_dbgi_000993_01_01*.raw; do wine msconvert \"$file\" --mzML --64 --zlib --outdir /output; done'</span>\n</code></pre>\n<p>For the rest we have this automatized at the moment with the following script:\nAlso at <a href=\"https://github.com/mapp-metabolomics-unit/msconvert-launcher/blob/9540e2f9f8b9f600a1beb38f061f388e0a1fc4e4/src/launcher.sh\">https://github.com/mapp-metabolomics-unit/msconvert-launcher/blob/9540e2f9f8b9f600a1beb38f061f388e0a1fc4e4/src/launcher.sh</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Define input and output directories</span>\n<span class=\"token assign-left variable\">input_dir</span><span class=\"token operator\">=</span><span class=\"token string\">\"/media/share/mapp/public/QE_plus_unifr/raw\"</span>\n<span class=\"token assign-left variable\">output_dir</span><span class=\"token operator\">=</span><span class=\"token string\">\"/media/share/mapp/public/QE_plus_unifr/converted\"</span>\n<span class=\"token assign-left variable\">log_file</span><span class=\"token operator\">=</span><span class=\"token string\">\"/media/share/mapp/public/QE_plus_unifr/logfile.log\"</span>\n<span class=\"token assign-left variable\">processed_files</span><span class=\"token operator\">=</span><span class=\"token string\">\"/media/share/mapp/public/QE_plus_unifr/processed_files.txt\"</span>\n<span class=\"token assign-left variable\">lock_file</span><span class=\"token operator\">=</span><span class=\"token string\">\"/media/share/mapp/public/QE_plus_unifr/convert_new_files.lock\"</span>\n\n<span class=\"token comment\"># Create processed_files.txt if it doesn't exist</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token string\">\"<span class=\"token variable\">$processed_files</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">touch</span> <span class=\"token string\">\"<span class=\"token variable\">$processed_files</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Function to convert a file</span>\n<span class=\"token function-name function\">convert_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">file</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>: Converting file <span class=\"token variable\">$file</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"<span class=\"token variable\">$log_file</span>\"</span>\n    <span class=\"token function\">docker</span> run --rm -e <span class=\"token assign-left variable\">WINEDEBUG</span><span class=\"token operator\">=</span>-all <span class=\"token punctuation\">\\</span>\n    -v <span class=\"token string\">\"<span class=\"token variable\">$input_dir</span>:/data\"</span> <span class=\"token punctuation\">\\</span>\n    -v <span class=\"token string\">\"<span class=\"token variable\">$output_dir</span>:/output\"</span> <span class=\"token punctuation\">\\</span>\n    chambm/pwiz-skyline-i-agree-to-the-vendor-licenses wine msconvert <span class=\"token string\">\"/data/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span><span class=\"token variable\">)</span></span>\"</span> --outdir /output --mzML --64 --zlib\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>: Finished converting file <span class=\"token variable\">$file</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"<span class=\"token variable\">$log_file</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Ensure only one instance of the script runs at a time</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -e <span class=\"token string\">\"<span class=\"token variable\">$lock_file</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">kill</span> -0 <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> <span class=\"token string\">\"<span class=\"token variable\">$lock_file</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>: Script is already running.\"</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"<span class=\"token variable\">$log_file</span>\"</span>\n    <span class=\"token builtin class-name\">exit</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Create a lock file with the current PID</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">></span> <span class=\"token string\">\"<span class=\"token variable\">$lock_file</span>\"</span>\n\n<span class=\"token comment\"># Ensure lock file is removed on script exit</span>\n<span class=\"token builtin class-name\">trap</span> <span class=\"token string\">\"rm -f <span class=\"token variable\">$lock_file</span>\"</span> EXIT\n\n<span class=\"token comment\"># Check for new .raw files and process them</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$input_dir</span>\"</span>/*.raw<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token function\">grep</span> -Fxq <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$processed_files</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>: Detected new file: <span class=\"token variable\">$file</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"<span class=\"token variable\">$log_file</span>\"</span>\n        convert_file <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"<span class=\"token variable\">$processed_files</span>\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span>\n</code></pre>","noteIndex":{"id":"nKP9hb3jEQKnhdgkHa5l0","title":"Root","desc":"","updated":1637350297192,"created":1630132422480,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"9dac15d3af8ef43be4ee8d4bca5e2202","links":[{"type":"ref","from":{"fname":"root","id":"nKP9hb3jEQKnhdgkHa5l0","vaultName":"vault"},"value":"projects.labelled-sugars.isotopic-ratio-calc-comp","position":{"start":{"line":7,"column":1,"offset":237},"end":{"line":7,"column":55,"offset":291},"indent":[]},"xvault":false,"to":{"fname":"projects.labelled-sugars.isotopic-ratio-calc-comp"}},{"type":"ref","from":{"fname":"root","id":"nKP9hb3jEQKnhdgkHa5l0","vaultName":"vault"},"value":"projects.labelled-sugars.isotopic-ratio-calc-comp","position":{"start":{"line":9,"column":1,"offset":293},"end":{"line":9,"column":110,"offset":402},"indent":[]},"xvault":true,"to":{"fname":"projects.labelled-sugars.isotopic-ratio-calc-comp","vaultName":"didier-reinhardt-group-IRayp1ECkrty3SxhP1Cap"}}],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1}},"children":["nj2zdhrspr8p4l15wb8dpg7","TRvMUEW7HVT7Vvny0AUF1","zbltzhf49jneruzhejqlzty","4ade8jh5lae5a1y61r2d7y0","vq7xwpdxi15poruey3ib0sh","0ycy0n1wprvx7h82emg4zgc","mrslbnp9bp5tia1ne4nnszu","RBxrtKZIWsMnHMVAyLlmc","mBtD1qPsLMRYntiuhCOBG","48173l5udd340kw1a4v9tuv","yohkugdcff8q2insh88fxpl","qb2q4vx5931adijds95fdbt","hva29wlmgjgu3vn9ghmpdii","huy4u2abu7my4w66cjzh04u","zg9lbox3rbxl0qvkctyv8qm","wgfph36zgefqywvcq5d3ji0"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n\nCroosvaults test\n\n![[projects.labelled-sugars.isotopic-ratio-calc-comp]]\n\n![[dendron://didier-reinhardt-group-IRayp1ECkrty3SxhP1Cap/projects.labelled-sugars.isotopic-ratio-calc-comp]]\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.71.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"MAPP Metabolomics Public Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Click here to edit this page on Github !","editBranch":"main","editViewMode":"edit","editRepository":"https://github.com/mapp-metabolomics-unit/mapp-dws-public"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/mapp-dws-public","siteUrl":"https://mapp-metabolomics-unit.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}